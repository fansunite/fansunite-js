import BN = require('bn.js');
import { BetManager } from './contract-wrappers/bet-manager';
import { Erc20Token } from './contract-wrappers/erc20-token';
import { FanToken } from './contract-wrappers/fan-token';
import { League001 } from './contract-wrappers/league-001';
import { LeagueRegistry } from './contract-wrappers/league-registry';
import { Registry } from './contract-wrappers/registry';
import { Resolver } from './contract-wrappers/resolver';
import { ResolverRegistry } from './contract-wrappers/resolver-registry';
import { Vault } from './contract-wrappers/vault';
import { Bet, NewSignedBet } from './types';
export declare class FansUnite {
    betManager: BetManager;
    fanToken: FanToken;
    league001: League001;
    leagueRegistry: LeagueRegistry;
    registry: Registry;
    resolver: Resolver;
    resolverRegistry: ResolverRegistry;
    vault: Vault;
    erc20Token: Erc20Token;
    private web3;
    private networkId;
    constructor(web3: any, networkId: number);
    hashBet(bet: Bet): string;
    typedDataSignBet(bet: Bet, v3: boolean): Promise<string>;
    newTypedDataSignBet(bet: Bet, v3: boolean): Promise<NewSignedBet>;
    generateNonce(): BN;
    awaitTxMined(txHash: string): Promise<unknown>;
    generateMoneylinePayload(participantId: BN): any;
    generateSpreadPayload(participantId: BN, spread: BN): any;
    generateTotalsPayload(participantId: BN, total: BN, over: boolean): any;
}
